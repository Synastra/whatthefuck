{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SLS-M00-Core-master\\\\CoreApp\\\\CoreApp.Web\\\\ClientApp\\\\src\\\\views\\\\auth\\\\LoginView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: classes.root,\n    title: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: 'staff@cloudplus.com.sg',\n            password: 'p@as$w0rd'\n          },\n          validationSchema: Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            password: Yup.string().max(255).required('Password is required')\n          }),\n          onSubmit: () => {\n            navigate('/app/dashboard', {\n              replace: true\n            });\n          },\n          children: ({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h2\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 3,\n              mb: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.email && errors.email),\n              fullWidth: true,\n              helperText: touched.email && errors.email,\n              label: \"Email Address\",\n              margin: \"normal\",\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"email\",\n              value: values.email,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              value: values.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              my: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Sign in now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body1\",\n              children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/register\",\n                variant: \"h6\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginView, \"pvfM4ZXsoMI5DaOvCNwyBjRqjLg=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["C:/Users/User/Desktop/SLS-M00-Core-master/CoreApp/CoreApp.Web/ClientApp/src/views/auth/LoginView.js"],"names":["React","Link","RouterLink","useNavigate","Yup","Formik","Box","Button","Container","TextField","Typography","makeStyles","Page","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","LoginView","classes","navigate","email","password","object","shape","string","max","required","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: 'staff@cloudplus.com.sg',\n              password: 'p@as$w0rd'\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={() => {\n              navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                </Box>\n                <Box\n                  mt={3}\n                  mb={3}\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}